// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	gentype "k8s.io/client-go/gentype"
	workv1 "open-cluster-management.io/api/client/work/clientset/versioned/typed/work/v1"
	v1 "open-cluster-management.io/api/work/v1"
)

// fakeAppliedManifestWorks implements AppliedManifestWorkInterface
type fakeAppliedManifestWorks struct {
	*gentype.FakeClientWithList[*v1.AppliedManifestWork, *v1.AppliedManifestWorkList]
	Fake *FakeWorkV1
}

func newFakeAppliedManifestWorks(fake *FakeWorkV1) workv1.AppliedManifestWorkInterface {
	return &fakeAppliedManifestWorks{
		gentype.NewFakeClientWithList[*v1.AppliedManifestWork, *v1.AppliedManifestWorkList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("appliedmanifestworks"),
			v1.SchemeGroupVersion.WithKind("AppliedManifestWork"),
			func() *v1.AppliedManifestWork { return &v1.AppliedManifestWork{} },
			func() *v1.AppliedManifestWorkList { return &v1.AppliedManifestWorkList{} },
			func(dst, src *v1.AppliedManifestWorkList) { dst.ListMeta = src.ListMeta },
			func(list *v1.AppliedManifestWorkList) []*v1.AppliedManifestWork {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1.AppliedManifestWorkList, items []*v1.AppliedManifestWork) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
