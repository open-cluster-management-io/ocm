// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	gentype "k8s.io/client-go/gentype"
	clusterv1 "open-cluster-management.io/api/client/cluster/clientset/versioned/typed/cluster/v1"
	v1 "open-cluster-management.io/api/cluster/v1"
)

// fakeManagedClusters implements ManagedClusterInterface
type fakeManagedClusters struct {
	*gentype.FakeClientWithList[*v1.ManagedCluster, *v1.ManagedClusterList]
	Fake *FakeClusterV1
}

func newFakeManagedClusters(fake *FakeClusterV1) clusterv1.ManagedClusterInterface {
	return &fakeManagedClusters{
		gentype.NewFakeClientWithList[*v1.ManagedCluster, *v1.ManagedClusterList](
			fake.Fake,
			"",
			v1.SchemeGroupVersion.WithResource("managedclusters"),
			v1.SchemeGroupVersion.WithKind("ManagedCluster"),
			func() *v1.ManagedCluster { return &v1.ManagedCluster{} },
			func() *v1.ManagedClusterList { return &v1.ManagedClusterList{} },
			func(dst, src *v1.ManagedClusterList) { dst.ListMeta = src.ListMeta },
			func(list *v1.ManagedClusterList) []*v1.ManagedCluster { return gentype.ToPointerSlice(list.Items) },
			func(list *v1.ManagedClusterList, items []*v1.ManagedCluster) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
