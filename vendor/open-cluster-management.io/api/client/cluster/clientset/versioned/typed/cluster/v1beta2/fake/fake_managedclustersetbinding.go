// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	gentype "k8s.io/client-go/gentype"
	clusterv1beta2 "open-cluster-management.io/api/client/cluster/clientset/versioned/typed/cluster/v1beta2"
	v1beta2 "open-cluster-management.io/api/cluster/v1beta2"
)

// fakeManagedClusterSetBindings implements ManagedClusterSetBindingInterface
type fakeManagedClusterSetBindings struct {
	*gentype.FakeClientWithList[*v1beta2.ManagedClusterSetBinding, *v1beta2.ManagedClusterSetBindingList]
	Fake *FakeClusterV1beta2
}

func newFakeManagedClusterSetBindings(fake *FakeClusterV1beta2, namespace string) clusterv1beta2.ManagedClusterSetBindingInterface {
	return &fakeManagedClusterSetBindings{
		gentype.NewFakeClientWithList[*v1beta2.ManagedClusterSetBinding, *v1beta2.ManagedClusterSetBindingList](
			fake.Fake,
			namespace,
			v1beta2.SchemeGroupVersion.WithResource("managedclustersetbindings"),
			v1beta2.SchemeGroupVersion.WithKind("ManagedClusterSetBinding"),
			func() *v1beta2.ManagedClusterSetBinding { return &v1beta2.ManagedClusterSetBinding{} },
			func() *v1beta2.ManagedClusterSetBindingList { return &v1beta2.ManagedClusterSetBindingList{} },
			func(dst, src *v1beta2.ManagedClusterSetBindingList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta2.ManagedClusterSetBindingList) []*v1beta2.ManagedClusterSetBinding {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta2.ManagedClusterSetBindingList, items []*v1beta2.ManagedClusterSetBinding) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
