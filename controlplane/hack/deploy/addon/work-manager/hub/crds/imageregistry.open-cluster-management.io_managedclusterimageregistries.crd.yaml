apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: managedclusterimageregistries.imageregistry.open-cluster-management.io
spec:
  group: imageregistry.open-cluster-management.io
  names:
    kind: ManagedClusterImageRegistry
    listKind: ManagedClusterImageRegistryList
    plural: managedclusterimageregistries
    singular: managedclusterimageregistry
  scope: Namespaced
  preserveUnknownFields: false
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ManagedClusterImageRegistry represents the image overridden configuration information.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the information of the ManagedClusterImageRegistry.
              type: object
              required:
                - placementRef
                - pullSecret
              properties:
                placementRef:
                  description: PlacementRef is the referred Placement name.
                  type: object
                  required:
                    - group
                    - name
                    - resource
                  properties:
                    group:
                      description: Group is the api group of the placement. Current group is cluster.open-cluster-management.io.
                      type: string
                      enum:
                        - cluster.open-cluster-management.io
                    name:
                      description: Name is the name of the Placement.
                      type: string
                    resource:
                      description: Resource is the resource type of the Placement. Current resource is placement or placements.
                      type: string
                      enum:
                        - placement
                        - placements
                pullSecret:
                  description: PullSecret is the name of image pull secret which should be in the same namespace with the managedClusterImageRegistry.
                  type: object
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                registries:
                  description: Registries includes the mirror and source registries. The source registry will be replaced by the Mirror. The larger index will work if the Sources are the same.
                  type: array
                  items:
                    type: object
                    required:
                      - mirror
                    properties:
                      mirror:
                        description: Mirror is the mirrored registry of the Source. Will be ignored if Mirror is empty.
                        type: string
                      source:
                        description: Source is the source registry. All image registries will be replaced by Mirror if Source is empty.
                        type: string
                registry:
                  description: Registry is the Mirror registry which will replace all images registries. will be ignored if Registries is not empty.
                  type: string
            status:
              description: Status represents the desired status of the managedClusterImageRegistry.
              type: object
              properties:
                conditions:
                  description: Conditions contains condition information for a managedClusterImageRegistry
                  type: array
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                    type: object
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        type: string
                        format: date-time
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        type: string
                        maxLength: 32768
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        type: integer
                        format: int64
                        minimum: 0
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        type: string
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        type: string
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        type: string
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
