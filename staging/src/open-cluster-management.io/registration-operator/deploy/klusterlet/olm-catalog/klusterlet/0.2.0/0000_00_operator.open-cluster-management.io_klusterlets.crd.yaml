apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: klusterlets.operator.open-cluster-management.io
spec:
  group: operator.open-cluster-management.io
  names:
    kind: Klusterlet
    listKind: KlusterletList
    plural: klusterlets
    singular: klusterlet
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Klusterlet represents controllers on the managed cluster. When
        configured, the Klusterlet requires a secret named of bootstrap-hub-kubeconfig
        in the same namespace to allow API requests to the hub for the registration
        protocol.
      type: object
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: Spec represents the desired deployment configuration of Klusterlet
            agent.
          type: object
          properties:
            clusterName:
              description: ClusterName is the name of the managed cluster to be created
                on hub. The Klusterlet agent generates a random name if it is not
                set, or discovers the appropriate cluster name on openshift.
              type: string
            externalServerURLs:
              description: ExternalServerURLs represents the a list of apiserver urls
                and ca bundles that is accessible externally If it is set empty, managed
                cluster has no externally accessible url that hub cluster can visit.
              type: array
              items:
                description: ServerURL represents the apiserver url and ca bundle
                  that is accessible externally
                type: object
                properties:
                  caBundle:
                    description: CABundle is the ca bundle to connect to apiserver
                      of the managed cluster. System certs are used if it is not set.
                    type: string
                    format: byte
                  url:
                    description: URL is the url of apiserver endpoint of the managed
                      cluster.
                    type: string
            namespace:
              description: Namespace is the namespace to deploy the agent. The namespace
                must have a prefix of "open-cluster-management-", and if it is not
                set, the namespace of "open-cluster-management-agent" is used to deploy
                agent.
              type: string
            registrationImagePullSpec:
              description: RegistrationImagePullSpec represents the desired image
                configuration of registration agent.
              type: string
            workImagePullSpec:
              description: WorkImagePullSpec represents the desired image configuration
                of work agent.
              type: string
        status:
          description: Status represents the current status of Klusterlet agent.
          type: object
          properties:
            conditions:
              description: 'Conditions contain the different condition statuses for
                this Klusterlet. Valid condition types are: Applied: components have
                been applied in the managed cluster. Available: components in the
                managed cluster are available and ready to serve. Progressing: components
                in the managed cluster are in a transitioning state. Degraded: components
                in the managed cluster do not match the desired configuration and
                only provide degraded service.'
              type: array
              items:
                description: "Condition contains details for one aspect of the current
                  state of this API Resource. --- This struct is intended for direct
                  use as an array at the field path .status.conditions.  For example,
                  type FooStatus struct{     // Represents the observations of a foo's
                  current state.     // Known .status.conditions.type are: \"Available\",
                  \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     //
                  +patchStrategy=merge     // +listType=map     // +listMapKey=type
                  \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                  patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                  \n     // other fields }"
                type: object
                required:
                - lastTransitionTime
                - message
                - reason
                - status
                - type
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition
                      transitioned from one status to another. This should be when
                      the underlying condition changed.  If that is not known, then
                      using the time when the API field changed is acceptable.
                    type: string
                    format: date-time
                  message:
                    description: message is a human readable message indicating details
                      about the transition. This may be an empty string.
                    type: string
                    maxLength: 32768
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation
                      that the condition was set based upon. For instance, if .metadata.generation
                      is currently 12, but the .status.conditions[x].observedGeneration
                      is 9, the condition is out of date with respect to the current
                      state of the instance.
                    type: integer
                    format: int64
                    minimum: 0
                  reason:
                    description: reason contains a programmatic identifier indicating
                      the reason for the condition's last transition. Producers of
                      specific condition types may define expected values and meanings
                      for this field, and whether the values are considered a guaranteed
                      API. The value should be a CamelCase string. This field may
                      not be empty.
                    type: string
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    type: string
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      --- Many .condition.type values are consistent across resources
                      like Available, but because arbitrary conditions can be useful
                      (see .node.status.conditions), the ability to deconflict is
                      important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    type: string
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
            generations:
              description: Generations are used to determine when an item needs to
                be reconciled or has changed in a way that needs a reaction.
              type: array
              items:
                description: GenerationStatus keeps track of the generation for a
                  given resource so that decisions about forced updates can be made.
                  the definition matches the GenerationStatus defined in github.com/openshift/api/v1
                type: object
                properties:
                  group:
                    description: group is the group of the thing you're tracking
                    type: string
                  lastGeneration:
                    description: lastGeneration is the last generation of the thing
                      that controller applies
                    type: integer
                    format: int64
                  name:
                    description: name is the name of the thing you're tracking
                    type: string
                  namespace:
                    description: namespace is where the thing you're tracking is
                    type: string
                  resource:
                    description: resource is the resource type of the thing you're
                      tracking
                    type: string
                  version:
                    description: version is the version of the thing you're tracking
                    type: string
            observedGeneration:
              description: ObservedGeneration is the last generation change you've
                dealt with
              type: integer
              format: int64
            relatedResources:
              description: RelatedResources are used to track the resources that are
                related to this Klusterlet
              type: array
              items:
                description: RelatedResourceMeta represents the resource that is managed
                  by an operator
                type: object
                properties:
                  group:
                    description: group is the group of the thing you're tracking
                    type: string
                  name:
                    description: name is the name of the thing you're tracking
                    type: string
                  namespace:
                    description: namespace is where the thing you're tracking is
                    type: string
                  resource:
                    description: resource is the resource type of the thing you're
                      tracking
                    type: string
                  version:
                    description: version is the version of the thing you're tracking
                    type: string
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
  preserveUnknownFields: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
