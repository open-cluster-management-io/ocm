apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "operator.open-cluster-management.io/v1",
          "kind": "Klusterlet",
          "metadata": {
            "name": "klusterlet"
          },
          "spec": {
            "clusterName": "cluster1",
            "deployOption": {
              "mode": "Default"
            },
            "externalServerURLs": [
              {
                "url": "https://localhost"
              }
            ],
            "namespace": "open-cluster-management-agent",
            "registrationConfiguration": {
              "featureGates": [
                {
                  "feature": "AddonManagement",
                  "mode": "Enable"
                }
              ]
            },
            "registrationImagePullSpec": "quay.io/open-cluster-management/registration:v0.9.0",
            "workImagePullSpec": "quay.io/open-cluster-management/work:v0.9.0"
          }
        }
      ]
    capabilities: Basic Install
    categories: Integration & Delivery,OpenShift Optional
    certified: "false"
    containerImage: quay.io/open-cluster-management/registration-operator:v0.9.1
    createdAt: "2022-10-27T20:00:31Z"
    description: Manages the installation and upgrade of the Klusterlet.
    operators.operatorframework.io/builder: operator-sdk-v1.1.0
    operators.operatorframework.io/project_layout: go
    repository: https://github.com/open-cluster-management-io/registration-operator
    support: Red Hat, Inc.
  name: klusterlet.v0.9.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Klusterlet defines the configurations of agents running on the managed cluster
      displayName: Klusterlet
      kind: Klusterlet
      name: klusterlets.operator.open-cluster-management.io
      version: v1
  description: |
    The Klusterlet proivdes the registation to the Hub clusters as a managed cluster. This operator supports the installation and upgrade of Klusterlet.

    ## Prerequisites
    You need a Hub cluster which has installed ClusterManager.

    ## How to Install
    * Install Klusterlet operator by following instructions in top right button `Install`.
    * Optional: Create an agent namespace used to deploy Klusterlet. The default namespace is `open-cluster-management-agent`.
    * Create a secret `bootstrap-hub-kubeconfig` with the kubeconfig file of hub cluster in the agent namespace.

      ```
      $ kubectl create secret generic bootstrap-hub-kubeconfig --from-file=kubeconfig=<kubeconfig file of hub clsuter> -n <agent namespace>
      ```

    * Create an instance of the Klusterlet resource to install the Klusterlet.

    The pods of Klusterlet are created in agent namespace.

    ```
    $ kubectl get pods -n open-cluster-management-agent
    NAME                                             READY   STATUS    RESTARTS   AGE
    klusterlet-registration-agent-7fdd5b549b-4q88s   1/1     Running   0          27s
    klusterlet-registration-agent-7fdd5b549b-ccdgn   1/1     Running   0          27s
    klusterlet-registration-agent-7fdd5b549b-djhl9   1/1     Running   0          27s
    klusterlet-work-agent-cbbb7f945-g7m45            1/1     Running   0          27s
    klusterlet-work-agent-cbbb7f945-mxdbg            1/1     Running   1          27s
    klusterlet-work-agent-cbbb7f945-pnjxk            1/1     Running   0          27s
    ```

    There is a ManagedCluster created in the Hub cluster.

    ```
    $ kubectl get managedclusters.cluster.open-cluster-management.io
    NAME                   HUB ACCEPTED   MANAGED CLUSTER URLS     JOINED   AVAILABLE   AGE
    cluster1               false                                                        27s
    ```
  displayName: Klusterlet
  icon:
  - base64data: 
    mediatype: image/png
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          - configmaps
          - serviceaccounts
          verbs:
          - create
          - get
          - list
          - update
          - watch
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - create
          - get
          - list
          - update
          - watch
          - patch
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        - apiGroups:
          - ""
          resources:
          - namespaces
          verbs:
          - create
          - get
          - list
          - watch
          - delete
        - apiGroups:
          - ""
          resources:
          - nodes
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - ""
          - events.k8s.io
          resources:
          - events
          verbs:
          - create
          - patch
          - update
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - get
          - list
          - update
          - watch
          - patch
          - delete
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - rolebindings
          verbs:
          - create
          - get
          - list
          - update
          - watch
          - patch
          - delete
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterroles
          - roles
          verbs:
          - create
          - get
          - list
          - update
          - watch
          - patch
          - delete
          - escalate
          - bind
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - get
          - list
          - update
          - watch
          - patch
          - delete
        - apiGroups:
          - operator.open-cluster-management.io
          resources:
          - klusterlets
          verbs:
          - get
          - list
          - watch
          - update
          - patch
          - delete
        - apiGroups:
          - operator.open-cluster-management.io
          resources:
          - klusterlets/status
          verbs:
          - update
          - patch
        - apiGroups:
          - work.open-cluster-management.io
          resources:
          - appliedmanifestworks
          verbs:
          - list
          - update
        serviceAccountName: klusterlet
      deployments:
      - name: klusterlet
        spec:
          replicas: 3
          selector:
            matchLabels:
              app: klusterlet
          strategy: {}
          template:
            metadata:
              annotations:
                target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
              labels:
                app: klusterlet
            spec:
              affinity:
                podAntiAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - key: app
                          operator: In
                          values:
                          - klusterlet
                      topologyKey: failure-domain.beta.kubernetes.io/zone
                    weight: 70
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - key: app
                          operator: In
                          values:
                          - klusterlet
                      topologyKey: kubernetes.io/hostname
                    weight: 30
              containers:
              - args:
                - /registration-operator
                - klusterlet
                image: quay.io/open-cluster-management/registration-operator:v0.9.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 2
                  periodSeconds: 10
                name: klusterlet
                readinessProbe:
                  httpGet:
                    path: /healthz
                    port: 8443
                    scheme: HTTPS
                  initialDelaySeconds: 2
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
              serviceAccountName: klusterlet
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - open-cluster-management
  - Klusterlet
  links:
  - name: Registration Operator
    url: https://github.com/open-cluster-management-io/registration-operator
  maintainers:
  - email: zyin@redhat.com
    name: Zhiwei Yin
  - email: deads@redhat.com
    name: David Eads
  - email: jqiu@redhat.com
    name: Jian Qiu
  maturity: alpha
  provider:
    name: Red Hat, Inc.
  replaces: klusterlet.v0.8.0
  selector:
    matchLabels:
      app: klusterlet
  version: 0.9.1
