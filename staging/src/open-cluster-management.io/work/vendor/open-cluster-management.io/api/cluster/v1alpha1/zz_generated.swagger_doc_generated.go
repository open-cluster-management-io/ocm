package v1alpha1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ClusterClaim = map[string]string{
	"":     "ClusterClaim represents cluster information that a managed cluster claims ClusterClaims with well known names include,\n 1. id.k8s.io, it contains a unique identifier for the cluster.\n 2. clusterset.k8s.io, it contains an identifier that relates the cluster\n    to the ClusterSet in which it belongs.\n\nClusterClaims created on a managed cluster will be collected and saved into the status of the corresponding ManagedCluster on hub.",
	"spec": "Spec defines the attributes of the ClusterClaim.",
}

func (ClusterClaim) SwaggerDoc() map[string]string {
	return map_ClusterClaim
}

var map_ClusterClaimList = map[string]string{
	"":         "ClusterClaimList is a collection of ClusterClaim.",
	"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
	"items":    "Items is a list of ClusterClaim.",
}

func (ClusterClaimList) SwaggerDoc() map[string]string {
	return map_ClusterClaimList
}

var map_ClusterClaimSpec = map[string]string{
	"value": "Value is a claim-dependent string",
}

func (ClusterClaimSpec) SwaggerDoc() map[string]string {
	return map_ClusterClaimSpec
}

var map_AddOnPlacementScore = map[string]string{
	"":       "AddOnPlacementScore represents a bundle of scores of one managed cluster, which could be used by placement. AddOnPlacementScore is a namespace scoped resource. The namespace of the resource is the cluster namespace.",
	"status": "Status represents the status of the AddOnPlacementScore.",
}

func (AddOnPlacementScore) SwaggerDoc() map[string]string {
	return map_AddOnPlacementScore
}

var map_AddOnPlacementScoreItem = map[string]string{
	"":      "AddOnPlacementScoreItem represents the score name and value.",
	"name":  "Name is the name of the score",
	"value": "Value is the value of the score. The score range is from -100 to 100.",
}

func (AddOnPlacementScoreItem) SwaggerDoc() map[string]string {
	return map_AddOnPlacementScoreItem
}

var map_AddOnPlacementScoreList = map[string]string{
	"":         "AddOnPlacementScoreList is a collection of AddOnPlacementScore.",
	"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
	"items":    "Items is a list of AddOnPlacementScore",
}

func (AddOnPlacementScoreList) SwaggerDoc() map[string]string {
	return map_AddOnPlacementScoreList
}

var map_AddOnPlacementScoreStatus = map[string]string{
	"":           "AddOnPlacementScoreStatus represents the current status of AddOnPlacementScore.",
	"conditions": "Conditions contain the different condition statuses for this AddOnPlacementScore.",
	"scores":     "Scores contain a list of score name and value of this managed cluster.",
	"validUntil": "ValidUntil defines the valid time of the scores. After this time, the scores are considered to be invalid by placement. nil means never expire. The controller owning this resource should keep the scores up-to-date.",
}

func (AddOnPlacementScoreStatus) SwaggerDoc() map[string]string {
	return map_AddOnPlacementScoreStatus
}

// AUTO-GENERATED FUNCTIONS END HERE
