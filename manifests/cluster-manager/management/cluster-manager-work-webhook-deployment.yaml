apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .ClusterManagerName }}-work-webhook
  namespace: {{ .ClusterManagerNamespace }}
  labels:
    app: {{ .ClusterManagerName }}-work-webhook
    {{ if gt (len .Labels) 0 }}
    {{ range $key, $value := .Labels }}
    "{{ $key }}": "{{ $value }}"
    {{ end }}
    {{ end }}
spec:
  replicas: {{ .Replica }}
  {{- if .WorkWebhook.HostNetwork }}
  strategy:
    rollingUpdate:
      {{- if lt .Replica 4 }}
      maxUnavailable: 1
      {{- else }}
      maxUnavailable: 25%
      {{- end }}
    type: RollingUpdate
  {{- end }}
  selector:
    matchLabels:
      app: {{ .ClusterManagerName }}-work-webhook
  template:
    metadata:
      labels:
        app: {{ .ClusterManagerName }}-work-webhook
        {{ if gt (len .Labels) 0 }}
        {{ range $key, $value := .Labels }}
        "{{ $key }}": "{{ $value }}"
        {{ end }}
        {{ end }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: failure-domain.beta.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .ClusterManagerName }}-work-webhook
          - weight: 30
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - {{ .ClusterManagerName }}-work-webhook
      {{- if .ImagePullSecret }}
      imagePullSecrets:
      - name: {{ .ImagePullSecret }}
      {{- end }}
      {{ if not .HostedMode }}
      serviceAccountName: work-webhook-sa
      {{ end }}
      containers:
      - name: {{ .ClusterManagerName }}-webhook
        image: {{ .WorkImage }}
        args:
          - /work
          - "webhook-server"
          - "--port={{ .WorkWebhook.Port }}"
          - "--health-probe-bind-address={{ .WorkWebhook.HealthProbeBindAddress }}"
          - "--metrics-bind-address={{ .WorkWebhook.MetricsBindAddress }}"
          {{ if gt (len .WorkFeatureGates) 0 }}
          {{range .WorkFeatureGates}}
          - {{ . }}
          {{ end }}
          {{ end }}
          {{ if .HostedMode }}
          - "--kubeconfig=/var/run/secrets/hub/kubeconfig"
          {{ end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          privileged: false
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        {{- if gt .WorkWebhook.HealthProbePort 0 }}
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTP
            port: {{ .WorkWebhook.HealthProbePort }}
          initialDelaySeconds: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            scheme: HTTP
            port: {{ .WorkWebhook.HealthProbePort }}
          initialDelaySeconds: 2
        {{- end }}
        {{- if or (eq .ResourceRequirementResourceType "Default") (eq .ResourceRequirementResourceType "") }}
        resources:
          requests:
            cpu: 2m
            memory: 16Mi
        {{- end }}
        {{- if eq .ResourceRequirementResourceType "BestEffort" }}
        resources: {}
        {{- end }}
        {{- if eq .ResourceRequirementResourceType "ResourceRequirement" }}
        resources:
          {{ .ResourceRequirements | indent 10 }}
        {{- end }}
        ports:
        - containerPort: {{ .WorkWebhook.Port }}
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-secret
          readOnly: true
        {{ if .HostedMode }}
        - mountPath: /var/run/secrets/hub
          name: kubeconfig
          readOnly: true
        {{ end }}
      {{- if .WorkWebhook.HostNetwork }}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      {{- end }}
      volumes:
      - name: webhook-secret
        secret:
          secretName: work-webhook-serving-cert
      {{ if .HostedMode }}
      - name: kubeconfig
        secret:
          secretName: work-webhook-sa-kubeconfig
      {{ end }}
