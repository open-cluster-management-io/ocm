kind: Deployment
apiVersion: apps/v1
metadata:
  name: cluster-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app: cluster-manager
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: cluster-manager
  template:
    metadata:
      labels:
        app: cluster-manager
    spec:
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: cluster-manager
      containers:
      - name: registration-operator
        image: "{{ .Values.images.registry }}/registration-operator:{{ template "imageTag" . }}"
        imagePullPolicy: {{ .Values.images.imagePullPolicy }}
        args:
          - "/registration-operator"
          - "hub"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 8443
          initialDelaySeconds: 2
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            scheme: HTTPS
            port: 8443
          initialDelaySeconds: 2
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: tmpdir
          mountPath: /tmp
      volumes:
      - name: tmpdir
        emptyDir: { }
