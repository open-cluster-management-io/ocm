
replicaCount: 1

# image configurations for all images used in operator deployment and klusterlet CR.
images:
  # the overrides can replace the corresponding image if not empty.
  overrides:
    registrationImage: ""
    workImage: ""
    operatorImage: ""
  # registry and tag work on all images, but the image will be replaced by overrides if the image in overrides is not empty.
  # The registry name must NOT contain a trailing slash.
  registry: quay.io/open-cluster-management
  # The image tag is the appVersion by default, can be replaced by this version, for example v1.0.0.
  tag: ""
  imagePullPolicy: IfNotPresent
  # The image pull secret name is open-cluster-management-image-pull-credentials.
  # Please set the userName/password or the dockerConfigJson if you use a private image registry.
  # The registry will be set in the generated credential if you set userName/password.
  # Suggest to use dockerConfigJson if you set overrides here,
  # For example: 
  # --set-file images.imageCredentials.dockerConfigJson=<your dockerConfigJson file> ,
  # or set the json context in values.yaml file 
  # dockerConfigJson: |
  #   {
  #     "auths": {
  #       "<your registry>": {
  #         "auth": "xxx",
  #         "email": "xxx"
  #     }
  #   }
  # }
  #
  # The image pull secret is fixed into the serviceAccount, you can also set
  # `createImageCredentials` to `false` and create the pull secret manually.
  imageCredentials:
    createImageCredentials: false
    userName: ""
    password: ""
    dockerConfigJson: ""

podSecurityContext:
  runAsNonRoot: true

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  privileged: false
  runAsNonRoot: true
  readOnlyRootFilesystem: true

resources:
  requests:
    cpu: 2m
    memory: 16Mi
  limits:
    memory: 2Gi

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 70
        podAffinityTerm:
          topologyKey: failure-domain.beta.kubernetes.io/zone
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - klusterlet
      - weight: 30
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - klusterlet


# enableSyncLabels is to enable the feature which can sync the labels from klusterlet to all agent resources.
enableSyncLabels: false

# The content of the kubeConfig for the hub cluster. Can be set via --set-file bootstrapHubKubeConfig=<path to hub cluster kubeConfig file>
# or set the kubeConfig content directly here.
# bootstrapHubKubeConfig: |
#   apiVersion: v1
#   clusters:
#   - cluster:
#       certificate-authority-data: xxx
#       server: <hub apiserver>
#     name: xx
#   contexts:
#   - context:
#   ...
bootstrapHubKubeConfig: ""

# grpcConfig includes the information needed to build connection to gRPC server in the bootstrap secret for
# cluster importing. Can be set via --set-file grpcConfig=<path to grpc config file>
# or set the grpcConfig content directly here.
# caData is the PEM-encoded certificate authority certificates with base64 encoding for the gRPC server.
# The default caData can be got on the Hub cluster by `kubectl get configmaps -n open-cluster-management-hub ca-bundle-configmap -o jsonpath='{.data.ca-bundle\.crt}'`.
# token can be got on the Hub cluster by `clusteradm get token`. 
# grpcConfig: |
#   caData: xxx 
#   token: xxx 
#   url: <grpc server URL on the Hub cluster> # required
grpcConfig: ""

# when MultipleHubs feature gate in klusterlet.registrationConfiguration is enabled, could set multiple bootstrap hub kubeConfigs here.
# otherwise can create these kubeConfig secret in the klusterlet.namespace manually on the managed cluster.
multiHubBootstrapHubKubeConfigs:
#  - name: xxx
#    kubeConfig: xxx
#  - name: xxx
#    kubeConfig: xxx

# The content of the kubeConfig for the managed cluster. Can be set via --set-file externalManagedKubeConfig=<path to managed cluster kubeConfig file>
# Only needed in Hosted or SingletonHosted mode. Optional.
externalManagedKubeConfig: ""

# only install the klusterlet CR if set true.
noOperator: false

# priorityClassName is the name of the PriorityClass used by the klusterlet and operator
priorityClassName: ""

klusterlet:
  # if false, will not create klusterlet CR. default it true.
  create: true
  # mode can be Default, Hosted, Singleton or SingletonHosted.
  mode: Singleton
  # when Default or Singleton mode, the name is klusterlet by default.
  # when in Hosted or SingletonHosted mode, the name will be klusterlet-<cluster name> if name is empty.
  name: "klusterlet"
  clusterName: cluster1
  # when Default or Singleton mode, the namespace is open-cluster-management-agent by default.
  # when in Hosted or SingletonHosted mode, the namespace is open-cluster-management-<cluster name> if namespace is empty.
  namespace: ""
  externalServerURLs: []
#   - url: ""
#     caBundle: ""
  resourceRequirement:
    type: Default
#   resourceRequirements:
#     requests:
#       cpu: 2m
#       memory: 16Mi
#     limits:
#       memory: 2Gi
  nodePlacement: {}
#   nodeSelector: {}
#   tolerations: []
  registrationConfiguration: {}
#   featureGates:
#     - feature: ""
#       mode: ""
#    clientCertExpirationSeconds: 600
  workConfiguration: {}
#   featureGates:
#     - feature: ""
#       mode: ""
